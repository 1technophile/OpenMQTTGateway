; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = main
include_dir = main

extra_configs =
  tests/*_env.ini
  *_env.ini

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENT CHOICE                                   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Uncomment the env line corresponding to your board and modules required,              ;
;you can also adapt the modules by removing the corresponding lines in the env detail  ;
; if you go to the build flag section of your env you will see that some User_config.h ;
; parameters can be overwritten here, for example the gateway name.                    ;
; If you want to avoid the lost of your environments at each update you can put them   ;
; into a separate file called prod_env.ini, it will be automatically read by pio       ;
; an example (prod_env.ini.example) is available into the same folder as this file.    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;default_envs = sonoff-basic-rfr3
;default_envs = sonoff-basic
;default_envs = rfbridge
;default_envs = esp32dev-all-test
;default_envs = esp32dev-rf
;default_envs = esp32dev-pilight
;default_envs = esp32dev-pilight-cc1101
;default_envs = esp32dev-somfy-cc1101
;default_envs = esp32dev-pilight-somfy-cc1101
;default_envs = esp32dev-weatherstation
;default_envs = esp32dev-ir
;default_envs = esp32dev-ble
;default_envs = esp32feather-ble
;default_envs = esp32-lolin32lite-ble
;default_envs = esp32-olimex-gtw-ble-eth
;default_envs = esp32-olimex-gtw-ble-wifi
;default_envs = esp32-m5stick-ble
;default_envs = esp32-m5stack-ble
;default_envs = esp32-m5stick-c-ble
;default_envs = esp32-m5stick-cp-ble
;default_envs = esp32-m5atom
;default_envs = ttgo-lora32-v1
;default_envs = ttgo-t-beam
;default_envs = heltec_wifi_lora_32
;default_envs = nodemcuv2-rf
;default_envs = nodemcuv2-rf-cc1101
;default_envs = nodemcuv2-somfy-cc1101
;default_envs = rf-wifi-gateway
;default_envs = nodemcuv2-rf2
;default_envs = nodemcuv2-rf2-cc1101
;default_envs = nodemcuv2-pilight
;default_envs = nodemcuv2-weatherstation
;default_envs = nodemcuv2-ir
;default_envs = avatto-bakeey-ir
;default_envs = nodemcuv2-ble
;default_envs = nodemcuv2-2g
;default_envs = nodemcuv2-all-test
;default_envs = uno-rf
;default_envs = uno-fastled
;default_envs = atmega-all-test
;default_envs = manual-wifi-test
;default_envs = esp32dev-tls-test
;default_envs = nodemcuv2-tls-test
;default_envs = nodemcuv2-rs232
;default_envs = sonoff-rfbridge-direct

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                              ENVIRONMENTS PARAMETERS                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Libraries and parameters shared accross environements                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[libraries]
arduinojson = ArduinoJson@5.13.4
arduinolog = https://github.com/1technophile/Arduino-Log.git#d13cd80
pubsubclient = PubSubClient@2.8
rc-switch = https://github.com/1technophile/rc-switch.git#385a7e0
newremoteswitch = https://github.com/1technophile/NewRemoteSwitch.git#8eb980e
ble = https://github.com/h2zero/NimBLE-Arduino.git#1.0.0
irremoteesp = IRremoteESP8266@2.7.9
irremote = https://github.com/z3t0/Arduino-IRremote.git#1c08a37
lora = https://github.com/sandeepmistry/arduino-LoRa.git#f4a1d27
esppilight = ESPiLight@0.17.0
rfWeatherStation = WeatherStationDataRx@0.3.1
rfm69 = https://github.com/LowPowerLab/RFM69.git#2e915ea
rfm69spi = https://github.com/lowpowerlab/spiflash.git#9c0c2b9
rfm69_low-power = Low-Power@1.6
dht = DHT sensor library@1.3.0
unifiedsensor = Adafruit Unified Sensor@1.0.2
tsl2561 = Adafruit TSL2561@1.0.3
bme280 = SparkFun BME280@2.0.4
bmp180 = BMP180#efac46bd8d
htu21 = SparkFun HTU21D Humidity and Temperature Sensor Breakout@1.1.3
ahtx0 = Adafruit AHTX0
ina226 = https://github.com/jarzebski/Arduino-INA226.git#968a684
a6lib = https://github.com/1technophile/A6lib.git
wifimanager = https://github.com/tzapu/WiFiManager.git#c3ff582
ethernet = Ethernet
esp8266_mdns = esp8266_mdns
wire = Wire
fastled = FastLED@3.3.2
onewire = OneWire
dallastemperature = DallasTemperature
m5stickc = M5StickC@0.2.0
m5stickcp = https://github.com/m5stack/M5StickC-Plus.git
m5stack = M5Stack@0.3.0
smartrc-cc1101-driver-lib = SmartRC-CC1101-Driver-Lib@2.5.4
stl = https://github.com/mike-matera/ArduinoSTL.git#7411816
shtc3 = https://github.com/sparkfun/SparkFun_SHTC3_Arduino_Library
somfy_remote=Somfy_Remote_Lib@0.2.0 

[env]
framework = arduino
lib_deps =
  ${libraries.pubsubclient}
  ${libraries.arduinojson}
  ${libraries.arduinolog}
build_flags =
  -w ; supress all warnings
  '-DjsonPublishing=true'
  '-DjsonReceiving=true'
monitor_speed = 115200

[com]
esp8266_platform = espressif8266@2.6.2
esp32_platform = espressif32@1.12.2
atmelavr_platform = atmelavr@1.13.0

[com-esp]
lib_deps =
  ${env.lib_deps}
  ${libraries.wifimanager}
build_flags =
  ${env.build_flags}
  '-DsimpleReceiving=true'
  '-DZmqttDiscovery="HADiscovery"'
  '-DTRACE=1'
  ;'-DCORE_DEBUG_LEVEL=4'

[com-arduino]
lib_deps =
  ${env.lib_deps}
  ${libraries.ethernet}
build_flags =
  ${env.build_flags}
  '-DsimpleReceiving=true'
  '-DZmqttDiscovery="HADiscovery"'
  '-DTRACE=1'

[com-arduino-low-memory]
lib_deps =
  ${env.lib_deps}
  ${libraries.ethernet}
build_flags =
  ${env.build_flags}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENTS LIST                                    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;List of environments that can be build                                                ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:rfbridge]
platform = ${com.esp8266_platform}
board = esp8285
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewaySRFB="SRFB"'
  '-DLED_INFO=13'
  '-DLED_INFO_ON=0'
  '-DGateway_Name="OpenMQTTGateway_SRFB"'
board_build.flash_mode = dout

[env:esp32dev-all-test]
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.irremoteesp}
  ${libraries.lora}
  ${libraries.rfm69}
  ${libraries.rfm69spi}
  ${libraries.rc-switch}
  ${libraries.newremoteswitch}
  ${libraries.bme280}
  ${libraries.bmp180}
  ${libraries.htu21}
  ${libraries.ahtx0}
  ${libraries.unifiedsensor}
  ${libraries.dht}
  ${libraries.tsl2561}
  ${libraries.ina226}
  ${libraries.fastled}
  ${libraries.onewire}
  ${libraries.dallastemperature}
  ${libraries.rfWeatherStation}
  ${libraries.shtc3}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DZgatewayLORA="LORA"'
  '-DZgatewayRF2="RF2"'
  '-DZgatewayIR="IR"'
  '-DZgatewayBT="BT"'
  '-DZactuatorONOFF="ONOFF"'
  '-DZactuatorFASTLED="FASTLED"'
  '-DZactuatorPWM="PWM"'
  '-DZsensorINA226="INA226"'
  '-DZsensorHCSR501="HCSR501"'
  '-DZsensorADC="ADC"'
  '-DZsensorBH1750="BH1750"'
  '-DZsensorBME280="BME280"'
  '-DZsensorHTU21="HTU21"'
  '-DZsensorAHTx0="AHTx0"'
  '-DZsensorTSL2561="TSL2561"'
  '-DZsensorDHT="DHT"'
  '-DZsensorDS1820="DS1820"'
  '-DZgatewayRFM69="RFM69"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DZsensorGPIOKeyCode="GPIOKeyCode"'
  '-DZgatewayWeatherStation="WeatherStation"'
  '-DsimplePublishing=true'
  '-DGateway_Name="OpenMQTTGateway_ESP32_ALL"'

[env:esp32dev-rf]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_RF"'

[env:esp32dev-pilight]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esppilight}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayPilight="Pilight"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_Pilight"'

[env:esp32dev-pilight-cc1101]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esppilight}
  ${libraries.smartrc-cc1101-driver-lib}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayPilight="Pilight"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_Pilight-CC1101"'

[env:esp32dev-somfy-cc1101]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.somfy_remote}
  ${libraries.smartrc-cc1101-driver-lib}
build_flags =
  ${com-esp.build_flags}
  '-DZactuatorSomfy="Somfy"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_Somfy-CC1101"'

[env:esp32dev-pilight-somfy-cc1101]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esppilight}
  ${libraries.somfy_remote}
  ${libraries.smartrc-cc1101-driver-lib}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayPilight="Pilight"'
  '-DZactuatorSomfy="Somfy"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_Pilight-Somfy-CC1101"'

[env:esp32dev-weatherstation]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rfWeatherStation}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayWeatherStation="WeatherStation"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_WeatherStation"'

[env:esp32dev-ir]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.irremoteesp}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayIR="IR"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_IR"'

[env:esp32dev-ble]
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DLED_RECEIVE=2'
  '-DLED_RECEIVE_ON=0'
  '-DGateway_Name="OpenMQTTGateway_ESP32_BLE"'

[env:esp32feather-ble]
platform = ${com.esp32_platform}
board = featheresp32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DLED_RECEIVE=13'
  '-DLED_RECEIVE_ON=0'
  '-DGateway_Name="OpenMQTTGateway_ESP32_FTH_BLE"'

[env:esp32-lolin32lite-ble]
platform = ${com.esp32_platform}
board = lolin32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DLED_RECEIVE=22'
  '-DLED_RECEIVE_ON=0'
  '-DGateway_Name="OpenMQTTGateway_LOLIN32LITE_BLE"'

[env:esp32-olimex-gtw-ble-eth]
platform = ${com.esp32_platform}
board = esp32-gateway
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DLED_INFO=33'
  '-DLED_INFO_ON=1'
  '-DESP32_ETHERNET=true'
  '-DGateway_Name="OpenMQTTGateway_ESP32_OLM_GTWE"'

[env:esp32-olimex-gtw-ble-wifi]
platform = ${com.esp32_platform}
board = esp32-gateway
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DLED_INFO=33'
  '-DLED_INFO_ON=1'
  '-DTRIGGER_GPIO=34'
  '-DGateway_Name="OpenMQTTGateway_ESP32_OLM_GTWW"'

[env:esp32-m5stick-ble]
platform = ${com.esp32_platform}
board = m5stack-core-esp32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.irremoteesp}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DZgatewayIR="IR"'
  '-DLED_RECEIVE=19'
  '-DLED_RECEIVE_ON=1'
  '-DTRIGGER_GPIO=35'
  '-DIR_EMITTER_GPIO=17'
  '-DGateway_Name="OpenMQTTGateway_ESP32_M5STICK_BLE_IR"'
board_upload.speed = 921600

[env:esp32-m5stack-ble]
platform = ${com.esp32_platform}
board = m5stack-core-esp32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.m5stack}
  ${libraries.ble}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DZboardM5STACK="M5Stack"'
  '-DLED_RECEIVE=15'
  '-DTRIGGER_GPIO=37'
  '-DSLEEP_BUTTON=38'
  '-DINPUT_GPIO=39'
  '-DGateway_Name="OpenMQTTGateway_ESP32_M5STACK_BLE"'
board_upload.speed = 921600

[env:esp32-m5stick-c-ble]
platform = ${com.esp32_platform}
board = m5stick-c
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.m5stickc}
  ${libraries.irremoteesp}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DZgatewayIR="IR"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DZboardM5STICKC="M5StickC"'
  '-DACTUATOR_ONOFF_GPIO=10'
  '-DINPUT_GPIO=37'
  '-DLED_RECEIVE=10'
  '-DLED_RECEIVE_ON=0'
  '-DSLEEP_BUTTON=39'
  '-DTRIGGER_GPIO=39'
  '-DIR_EMITTER_INVERTED=true'
  '-DIR_EMITTER_GPIO=9'
  '-DGateway_Name="OpenMQTTGateway_ESP32_M5STICK_C_BLE_IR"'
board_upload.speed = 1500000

[env:esp32-m5stick-cp-ble]
platform = ${com.esp32_platform}
board = pico32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.m5stickcp}
  ${libraries.irremoteesp}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DZgatewayIR="IR"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DZboardM5STICKCP="M5StickCP"'
  '-DACTUATOR_ONOFF_GPIO=10'
  '-DINPUT_GPIO=37'
  '-DLED_RECEIVE=10'
  '-DLED_RECEIVE_ON=0'
  '-DSLEEP_BUTTON=39'
  '-DTRIGGER_GPIO=39'
  '-DIR_EMITTER_INVERTED=true'
  '-DIR_EMITTER_GPIO=9'
  '-DGateway_Name="OpenMQTTGateway_ESP32_M5STICK_CP_BLE_IR"'
board_upload.speed = 1500000

[env:esp32-m5atom]
platform = ${com.esp32_platform}
board = pico32
board_build.partitions = min_spiffs.csv
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.irremoteesp}
build_flags = 
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DZgatewayIR="IR"'
  '-DTRIGGER_GPIO=39'
  '-DSLEEP_BUTTON=39'
  '-DIR_EMITTER_GPIO=12'
  '-DGateway_Name="OpenMQTTGateway_ESP32_ATOM_BLE_IR"'
board_upload.speed = 1500000

[env:ttgo-lora32-v1]
platform = ${com.esp32_platform}
board = ttgo-lora32-v1
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.lora}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayLORA="LORA"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_LORA"'

[env:ttgo-t-beam]
# See version pinout differences here
# https://www.thethingsnetwork.org/forum/t/big-esp32-sx127x-topic-part-3/18436
platform = ${com.esp32_platform}
board = ttgo-t-beam
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.ble}
  ${libraries.lora}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayLORA="LORA"'
  '-DZgatewayBT="BT"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_BLE_LORA"'
  
  '-DLED_RECEIVE=21' # T-BEAM board V0.5
#  '-DLED_RECEIVE=14' # T-BEAM board  V0.7
#  '-DLED_RECEIVE=4' # T-BEAM board  V1.0+
  '-DTimeLedON=0.05'
  '-DLED_RECEIVE_ON=1' # Set 0 for board V1.0+

  # for V0.5 and V0.7 ONLY (V1.0+ as onboard AXP202 dedicated chip, need driver)
  # it's a 100K/100K divider (so 2 divider) and connected to GPIO35
  '-DZsensorADC="ADC"'
  '-DADC_GPIO=35'
  '-DADC_DIVIDER=2'
  # Reading battery level every minutes should be more than enought
  '-DTimeBetweenReadingADC=60000' 

[env:heltec_wifi_lora_32]
platform = ${com.esp32_platform}
board = heltec_wifi_lora_32

lib_deps =
  ${com-esp.lib_deps}
  ${libraries.lora}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayLORA="LORA"'
  '-DGateway_Name="OpenMQTTGateway_ESP32_LORA"'
  '-DLED_RECEIVE=25'
  '-DTimeLedON=0.1'
  '-DLED_RECEIVE_ON=1' 
  
[env:nodemcuv2-all-test]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esppilight}
  ${libraries.irremoteesp}
  ${libraries.rfm69}
  ${libraries.rfm69spi}
  ${libraries.rc-switch}
  ${libraries.newremoteswitch}
  ${libraries.bme280}
  ${libraries.bmp180}
  ${libraries.htu21}
  ${libraries.ahtx0}
  ${libraries.unifiedsensor}
  ${libraries.dht}
  ${libraries.tsl2561}
  ${libraries.ina226}
  ${libraries.esp8266_mdns}
  ${libraries.wire}
  ${libraries.fastled}
  ${libraries.onewire}
  ${libraries.dallastemperature}
  ${libraries.rfWeatherStation}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DZgatewayRF2="RF2"'
  '-DZgatewayIR="IR"'
  '-DZgatewayBT="BT"'
  '-DZgatewayPilight="Pilight"'
  '-DZactuatorONOFF="ONOFF"'
  '-DZactuatorFASTLED="FASTLED"'
  ;'-DZactuatorPWM="PWM"'
  '-DZsensorINA226="INA226"'
  '-DZsensorHCSR501="HCSR501"'
  '-DZsensorHCSR04="HCSR04"'
  '-DZsensorADC="ADC"'
  '-DZsensorBH1750="BH1750"'
  '-DZsensorBME280="BME280"'
  '-DZsensorHTU21="HTU21"'
  '-DZsensorAHTx0="AHTx0"'
  '-DZsensorTSL2561="TSL2561"'
  '-DZsensorDHT="DHT"'
  '-DZsensorDS1820="DS1820"'
  '-DZgatewayRFM69="RFM69"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DZsensorGPIOKeyCode="GPIOKeyCode"'
  '-DZgatewayWeatherStation="WeatherStation"'
  '-DsimplePublishing=true'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_ALL"'
board_build.flash_mode = dout


[env:nodemcuv2-2g]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.a6lib}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="2G"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_2G"'
board_build.flash_mode = dout

[env:nodemcuv2-ble]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.wire}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayBT="BT"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_BLE"'
board_build.flash_mode = dout

[env:nodemcuv2-ir]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.irremoteesp}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayIR="IR"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_IR"'
board_build.flash_mode = dout

[env:nodemcuv2-rs232]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRS232="RS232"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RS232"'
board_build.flash_mode = dout

[env:avatto-bakeey-ir]
platform = ${com.esp8266_platform}
board = esp01_1m
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.irremoteesp}
  ${libraries.esp8266_mdns}
build_flags = 
  ${com-esp.build_flags}
  '-DZgatewayIR="IR"'
  '-DTRIGGER_GPIO=13'
  '-DLED_SEND=4'
  '-DIR_EMITTER_GPIO=14'
  '-DIR_RECEIVER_GPIO=5'
  '-DGateway_Name="OpenMQTTGateway_AVATTO_IR"'
board_build.flash_mode = dout

[env:nodemcuv2-rf]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF"'
board_build.flash_mode = dout

[env:nodemcuv2-rf-cc1101]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
  ${libraries.smartrc-cc1101-driver-lib}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF-CC1101"'
board_build.flash_mode = dout

[env:nodemcuv2-somfy-cc1101]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.somfy_remote}
  ${libraries.smartrc-cc1101-driver-lib}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZactuatorSomfy="Somfy"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_Somfy-CC1101"'
board_build.flash_mode = dout

[env:manual-wifi-test]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DESPWifiManualSetup=true'
  '-DGateway_Name="OpenMQTTGateway_TEST_MANUAL_WIFI"'
board_build.flash_mode = dout

[env:esp32dev-tls-test]
platform = ${com.esp32_platform}
board = esp32dev
lib_deps =
  ${com-esp.lib_deps}
build_flags =
  ${com-esp.build_flags}
  '-DSECURE_CONNECTION'
  '-DGateway_Name="OpenMQTTGateway_TEST_TLS"'
board_build.flash_mode = dout


[env:nodemcuv2-tls-test]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
build_flags =
  ${com-esp.build_flags}
  '-DSECURE_CONNECTION'
  '-DGateway_Name="OpenMQTTGateway_TEST_TLS"'
board_build.flash_mode = dout

[env:rf-wifi-gateway]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF="RF"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF_WIFI_GW"'
  '-DRF_RECEIVER_GPIO=5'
board_build.flash_mode = dout

[env:nodemcuv2-rf2]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.newremoteswitch}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF2="RF2"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF2"'
board_build.flash_mode = dout

[env:nodemcuv2-rf2-cc1101]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.newremoteswitch}
  ${libraries.smartrc-cc1101-driver-lib}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayRF2="RF2"'
  '-DZradioCC1101="CC1101"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF2-CC1101"'
board_build.flash_mode = dout

[env:nodemcuv2-pilight]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esppilight}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayPilight="Pilight"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_Pilight"'
board_build.flash_mode = dout

[env:nodemcuv2-weatherstation]
platform = ${com.esp8266_platform}
board = nodemcuv2
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rfWeatherStation}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZgatewayWeatherStation="WeatherStationDataRx"'
  '-DGateway_Name="OpenMQTTGateway_ESP8266_RF3"'
board_build.flash_mode = dout

[env:sonoff-basic]
platform = ${com.esp8266_platform}
board = esp8285
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZactuatorONOFF="ONOFF"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DACTUATOR_ONOFF_GPIO=12'
  '-DINPUT_GPIO=0'
  '-DGateway_Name="OpenMQTTGateway_SONOFF_RELAY"'
board_build.flash_mode = dout

[env:sonoff-basic-rfr3]
platform = ${com.esp8266_platform}
board = esp8285
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.rc-switch}
  ${libraries.esp8266_mdns}
build_flags =
  ${com-esp.build_flags}
  '-DZactuatorONOFF="ONOFF"'
  '-DZsensorGPIOInput="GPIOInput"'
  '-DACTUATOR_ONOFF_GPIO=12'
  '-DINPUT_GPIO=0'
  '-DRF_RECEIVER_GPIO=4'
  '-DZgatewayRF="RF"'
  '-DGateway_Name="OpenMQTTGateway_SONOFF_BASIC_RFR3"'
board_build.flash_mode = dout

[env:atmega-all-test]
platform = ${com.atmelavr_platform}
board = megaatmega2560
lib_deps =
  ${com-arduino.lib_deps}
  ${libraries.irremote}
  ${libraries.rfm69}
  ${libraries.rfm69spi}
  ${libraries.rfm69_low-power}
  ${libraries.rc-switch}
  ${libraries.newremoteswitch}
  ${libraries.bme280}
  ${libraries.bmp180}
  ${libraries.htu21}
  ${libraries.ahtx0}
  ${libraries.unifiedsensor}
  ${libraries.dht}
  ${libraries.tsl2561}
  ${libraries.a6lib}
  ${libraries.ina226}
  ${libraries.fastled}
  ${libraries.onewire}
  ${libraries.dallastemperature}
  ${libraries.rfWeatherStation}
  ${libraries.stl}
build_flags =
  ${com-arduino.build_flags}
  '-DZgatewayRF="RF"'
  '-DZgatewayRF="RF315"'
  '-DZgatewayRF2="RF2"'
  '-DZgatewayIR="IR"'
  '-DZgatewayBT="BT"'
  '-DZactuatorONOFF="ONOFF"'
  '-DZactuatorFASTLED="FASTLED"'
  '-DZactuatorPWM="PWM"'
  '-DZsensorINA226="INA226"'
  '-DZsensorHCSR501="HCSR501"'
  '-DZsensorADC="ADC"'
  '-DZsensorBH1750="BH1750"'
  '-DZsensorBME280="BME280"'
  '-DZsensorHTU21="HTU21"'
  '-DZsensorAHTx0="AHTx0"'
  '-DZsensorTSL2561="TSL2561"'
  '-DZsensorDHT="DHT"'
  '-DZsensorDS1820="DS1820"'
  '-DZgatewayRFM69="RFM69"'
  '-DZgatewayWeatherStation="WeatherStation"'
  '-DZsensorGPIOInput="GPIOInput"'
  ;'-DZsensorGPIOKeyCode="GPIOKeyCode"'
  '-DZmqttDiscovery="HADiscovery"'
  '-DsimplePublishing=true'
  '-DGateway_Name="OpenMQTTGateway_ATMEGA_ALL"'

[env:uno-rf]
platform = ${com.atmelavr_platform}
board = uno
lib_deps =
  ${com-arduino.lib_deps}
  ${libraries.rc-switch}
build_flags =
  ${com-arduino-low-memory.build_flags}
  '-DZgatewayRF="RF"'
  '-DGateway_Name="OMG_1_RF"'

[env:uno-fastled]
platform = ${com.atmelavr_platform}
board = uno
lib_deps =
  ${com-arduino.lib_deps}
  ${libraries.fastled}
build_flags =
  ${com-arduino-low-memory.build_flags}
  '-DGateway_Name="OMG_1_FL"'
  '-DZactuatorFASTLED="FASTLED"'

[env:sonoff-rfbridge-direct]
platform = ${com.esp8266_platform}
board = esp8285
lib_deps = 
	${com-esp.lib_deps}
	${libraries.esppilight}
build_flags = 
	${com-esp.build_flags}
	'-DZgatewayPilight="Pilight"'
	'-DRF_RECEIVER_GPIO=4'
	'-DRF_EMITTER_GPIO=5'
	'-DLED_INFO=13'
	'-DLED_INFO_ON=0'
	'-DZsensorGPIOInput="GPIOInput"'
	'-DINPUT_GPIO=0'
	'-DGateway_Name="OpenMQTTGateway_SRFB_Direct"'
board_build.flash_mode = dout
